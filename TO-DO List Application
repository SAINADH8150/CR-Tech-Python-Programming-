import json
import os
from datetime import datetime

class Task:
    def __init__(self, description, priority, due_date=None):
        self.description = description
        self.priority = priority
        self.due_date = due_date
        self.completed = False

    def __str__(self):
        status = "Completed" if self.completed else "Pending"
        return f"{self.description} - Priority: {self.priority}, Due Date: {self.due_date}, Status: {status}"

class ToDoList:
    def __init__(self, filename):
        self.filename = filename
        self.tasks = []

    def load_tasks(self):
        if os.path.exists(self.filename):
            with open(self.filename, 'r') as file:
                data = json.load(file)
                for task_data in data:
                    task = Task(task_data['description'], task_data['priority'], task_data['due_date'])
                    task.completed = task_data['completed']
                    self.tasks.append(task)

    def save_tasks(self):
        with open(self.filename, 'w') as file:
            data = [{'description': task.description, 'priority': task.priority,
                     'due_date': task.due_date, 'completed': task.completed} for task in self.tasks]
            json.dump(data, file, indent=4)

    def add_task(self, description, priority, due_date=None):
        task = Task(description, priority, due_date)
        self.tasks.append(task)

    def remove_task(self, index):
        del self.tasks[index]

    def mark_task_completed(self, index):
        self.tasks[index].completed = True

    def list_tasks(self):
        for index, task in enumerate(self.tasks):
            print(f"{index + 1}. {task}")

def main():
    todo_list = ToDoList("tasks.json")
    todo_list.load_tasks()

    while True:
        print("\n1. Add Task")
        print("2. Remove Task")
        print("3. Mark Task as Completed")
        print("4. List Tasks")
        print("5. Quit")
        choice = input("Enter your choice: ")

        if choice == "1":
            description = input("Enter task description: ")
            priority = input("Enter priority (high/medium/low): ")
            due_date = input("Enter due date (YYYY-MM-DD): ")
            todo_list.add_task(description, priority, due_date)
            todo_list.save_tasks()
        elif choice == "2":
            index = int(input("Enter task index to remove: ")) - 1
            todo_list.remove_task(index)
            todo_list.save_tasks()
        elif choice == "3":
            index = int(input("Enter task index to mark as completed: ")) - 1
            todo_list.mark_task_completed(index)
            todo_list.save_tasks()
        elif choice == "4":
            todo_list.list_tasks()
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
